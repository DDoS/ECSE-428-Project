extends ../layout

block content
    .page-header
        h2 Question:
            span(id='q' + id + '_title')  #{question.title}
    .row
        .col-md-12
            +question(question.id, question.text, question.submitter,
                      question.date, question.upVoted, question.downVoted,
                      question.voteScore, user)

    .row
        .col-md-12
            h3 Arguments

    // Search bar
    .row
        .col-md-12
            form(id='searchForm', method='GET', action='/questions/view')
                input(type='hidden', name='q', value=question.id)
                .form-group
                    .input-group
                        input.form-control(id='searchInput', name='search',
                                           placeholder='Search for arguments...',
                                           autofocus=searchQuery === undefined
                                           value=searchQuery)
                        div.input-group-btn
                            button.btn.btn-default(id='searchButton',
                                                   type='submit')
                                i.fa.fa-search.fa-label
                                | Search
                            button.btn.btn-default.dropdown-toggle(id='sortButton',
                                                                   type='button',
                                                                   data-toggle='dropdown')
                                | Sort Results&nbsp;
                                span.caret
                            ul.dropdown-menu
                                li.dropdown-header Sort by date
                                li(id='newestFirstLi',
                                   onclick='$("#sortTypeInput").val("dateDes"); $("#searchForm").submit()')
                                    a(href='#') Newest first
                                li(id='oldestFirstLi',
                                   onclick='$("#sortTypeInput").val("dateAsc"); $("#searchForm").submit()')
                                    a(href='#') Oldest first
                                li.divider
                                li.dropdown-header Sort by vote score
                                li(id='highestScoreFirstLi',
                                   onclick='$("#sortTypeInput").val("voteDes"); $("#searchForm").submit()')
                                    a(href='#') Highest score first
                                li(id='lowestScoreFirstLi',
                                   onclick='$("#sortTypeInput").val("voteAsc"); $("#searchForm").submit()')
                                    a(href='#') Lowest score first
                input(id='sortTypeInput', type='hidden', name='sortType',
                      value=sortType === undefined ? 'dateDes' : sortType)

    .row
        .col-md-6
            h4 Arguments in Favour
            div(id='argumentsFor')
                if argsFor.length !== 0
                    each argument in argsFor
                        +argument(question.id, argument.id, argument.text,
                                  argument.submitter, argument.date,
                                  argument.upVoted, argument.downVoted,
                                  argument.voteScore, user)
                else
                    p(id='noArgsForPara')
                        if searchQuery === undefined
                            | No arguments have yet been made in favour. Why don't you
                            | write one?
                        else
                            | No results found.
        .col-md-6
            h4 Arguments Against
            div(id='argumentsAgainst')
                if argsAgainst.length !== 0
                    each argument in argsAgainst
                        +argument(question.id, argument.id, argument.text,
                                  argument.submitter, argument.date,
                                  argument.upVoted, argument.downVoted,
                                  argument.voteScore, user)
                else
                    p(id='noArgsAgainstPara')
                        if searchQuery === undefined
                            | No arguments have yet been made against. Why don't you
                            | write one?
                        else
                            | No results found.

    if user
        .row
            .col-md-12
                h3 Create an Argument
                form(method='POST', action='/questions/pa?q=#{question.id}')
                    input(type='hidden', name='_csrf', value=csrfToken)
                    .form-group
                        textarea.form-control(id='argumentTextarea',
                                              name='argument', rows='5',
                                              placeholder="What's your argument?")
                    .form-group
                        .btn-group
                            button.btn.btn-primary(id='forButton', name='type',
                                                   type='submit', value='pro')
                                i.fa.fa-label.fa-paper-plane
                                | For
                            button.btn.btn-danger(id='againstButton', name='type',
                                                  type='submit', value='con')
                                i.fa.fa-label.fa-paper-plane
                                | Against

    .row
        .col-md-12
            ul.pagination
                if currArgs == 1
                    li.disabled
                        a Prev
                else
                    li
                        a(href='/questions/view?q=' + question.id + '&page=#{currArgs - 1}') Prev

                if hasNextArgs
                    li
                        a(href='/questions/view?q=' + question.id + 'page=#{currArgs + 1}') Next
                else
                    li.disabled
                        a Next

mixin question(id, text, submitter, date, upVoted, downVoted, count, user)
    .panel.panel-default
        .panel-body
            .vote-group
                form(method='POST', action='/questions/vote?q=#{id}')
                    .btn-group-vertical
                        button.btn.btn-primary(id='q' + id + '_upvote',
                                               class=upVoted ? 'active' : undefined,
                                               disabled = !user ? 'disabled' : undefined,
                                               type='submit', name='vote',
                                               value=upVoted ? 'none' : 'up')
                            i.fa.fa-thumbs-up
                        button.btn.btn-default.vote-status(disabled='disabled')
                            span.badge(id='q' + id + '_count')= count
                        button.btn.btn-danger(id='q' + id + '_downvote',
                                              class=downVoted ? 'active' : undefined,
                                              disabled = !user ? 'disabled' : undefined,
                                              type='submit', name='vote',
                                              value=downVoted ? 'none' : 'down')
                            i.fa.fa-thumbs-down
                    input(type='hidden', name='_csrf', value=csrfToken)
            .vote-panel-text(id='q' + id + '_text')
                each para in text.split('\n')
                    p= para
        .panel-footer
            span.text-muted(id='q' + id + '_meta')
                | Submitted by #{submitter} on
                | #{moment(date.toISOString()).format('YYYY-MM-DD HH:m:s')}
            if user != undefined && user.username == submitter
                .edit-panel.col-md
                    a(href="/questions/edit?q=#{id}") Edit

mixin argument(qid, aid, text, submitter, date, upVoted, downVoted, count)
    .panel.panel-default(id='a' + aid)
        .panel-body
            .vote-group
                form(method='POST', action='/questions/vote?q=#{qid}&a=#{aid}')
                    .btn-group-vertical
                        button.btn.btn-primary(id='a' + aid + '_upvote',
                                               class=upVoted ? 'active' : undefined,
                                               disabled = !user ? 'disabled' : undefined,
                                               type='submit', name='vote',
                                               value=upVoted ? 'none' : 'up')
                            i.fa.fa-thumbs-up
                        button.btn.btn-default.vote-status(disabled='disabled')
                            span.badge(id='a' + aid + '_count')= count
                        button.btn.btn-danger(id='a' + aid + '_downvote',
                                              class=downVoted ? 'active' : undefined,
                                              disabled = !user ? 'disabled' : undefined,
                                              type='submit', name='vote',
                                              value=downVoted ? 'none' : 'down')
                            i.fa.fa-thumbs-down
                    input(type='hidden', name='_csrf', value=csrfToken)
            .vote-panel-text(id='a' + aid + '_text')
                each para in text.split('\n')
                    p= para

            .edit-panel
                a(href="/arguments/edit?q=#{qid}&a=#{aid}") Edit
        .panel-footer
            span.text-muted(id='a' + aid + '_meta')
                | Submitted by #{submitter} on
                | #{moment(date.toISOString()).format('YYYY-MM-DD HH:mm:ss')}
